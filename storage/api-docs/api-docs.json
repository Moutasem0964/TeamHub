{
    "openapi": "3.0.0",
    "info": {
        "title": "TeamHub API",
        "description": "API documentation for TeamHub project",
        "contact": {
            "email": "support@teamhub.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost",
            "description": "API server"
        },
        {
            "url": "/api"
        }
    ],
    "paths": {
        "/api/v1/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Verify user email",
                "description": "Verifies the user's email and returns an API token.",
                "operationId": "e106147227a4e06010eac62983e3ed76",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "SHA1 hash of the user's email",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email successfully verified. Please Login!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid or expired verification link"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/v1/forgot-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request a password reset link",
                "description": "Sends a password reset link to the provided email if it exists.",
                "operationId": "e330f438774314bb0c73513ab3147038",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent to your email"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unable to send reset link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to send reset link"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user",
                "operationId": "f216a69b1f8ad4b9f90a712fe266528c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "current_tenant_id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "access_token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Wrong password"
                    },
                    "403": {
                        "description": "Email not verified"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout the authenticated user",
                "operationId": "b1d6ac14519538f90e89fe2499ed6983",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (invalid or missing token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "c0e9bae555b5a321a2eb5ecb60e5cbf1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "create_tenant": {
                                        "type": "boolean"
                                    },
                                    "tenant_name": {
                                        "type": "string"
                                    },
                                    "plan": {
                                        "type": "string",
                                        "enum": [
                                            "free",
                                            "plus"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Account created successfully"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/email/resend": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Resend email verification",
                "description": "Resends the verification email to the user if not verified yet.",
                "operationId": "f9ba48e9641fcb2f7aea43d7a08cef3b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@gmail.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verification status",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification email resent or Email already verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user found with this email"
                    }
                }
            }
        },
        "/api/v1/reset-password": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset user password",
                "description": "Resets the user's password using the reset token from the email link.",
                "operationId": "a52674121adedb226125053eeb8be8cc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "type": "string",
                                        "example": "random-token-from-email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newStrongPassword123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "newStrongPassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password has been reset successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully. Please Login"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token or email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid token or email!!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tenants/invitations/accept/{invitation}/{token}": {
            "get": {
                "tags": [
                    "Tenant Invitations"
                ],
                "summary": "Accept a tenant invitation",
                "operationId": "3f088fc08753686b30d072ea2894f486",
                "parameters": [
                    {
                        "name": "invitation",
                        "in": "path",
                        "description": "Invitation ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Invitation token",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation accepted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation accepted successfully. Please Login!"
                                        },
                                        "user_id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "tenant_id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "role": {
                                            "type": "string",
                                            "format": "string",
                                            "example": "member"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "202": {
                        "description": "Registration required (user not found)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "requires_registration": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "tenant_id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "role": {
                                            "type": "string",
                                            "example": "member"
                                        },
                                        "invitation_id": {
                                            "type": "string",
                                            "format": "uuid"
                                        },
                                        "invitation_token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid or expired token"
                    },
                    "422": {
                        "description": "Invitation no longer valid"
                    }
                }
            }
        },
        "/api/v1/tenants/pending-invitations": {
            "get": {
                "tags": [
                    "Tenant Invitations"
                ],
                "summary": "Get all pending tenant invitations for current tenant",
                "description": "Returns a list of pending invitations filtered by tenant.",
                "operationId": "getPendingInvitations",
                "responses": {
                    "200": {
                        "description": "Pending invitations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Pending invitations retrieved successfully."
                                        },
                                        "invitations": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/TenantInvitation"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/register-with-invitation": {
            "post": {
                "tags": [
                    "Tenant Invitations"
                ],
                "summary": "Register a new user with an invitation",
                "description": "Registers a new user who has accepted an invitation but does not yet have an account.  \r\n *                  The server ensures the invitation is valid and binds the new user to the tenant with the invited role.",
                "operationId": "e0a59e28ee996ba3ea33914ffa40b7f6",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "invitation_token",
                                    "name",
                                    "password",
                                    "password_confirmation",
                                    "invitaion_id"
                                ],
                                "properties": {
                                    "invitation_token": {
                                        "type": "string",
                                        "example": "raw-token-from-link"
                                    },
                                    "invitation_id": {
                                        "type": "string",
                                        "example": "raw-id-from-link"
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful, tenant joined. Please Login!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "registration successful, tenant joined"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        },
                                        "tenant": {
                                            "properties": {
                                                "id": {
                                                    "type": "string",
                                                    "format": "uuid"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "member"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid or expired invitation token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid or expired token."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error (e.g., password mismatch)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The password confirmation does not match."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tenants/delete-invitation/{invitation}": {
            "delete": {
                "tags": [
                    "Tenant Invitations"
                ],
                "summary": "Revoke a tenant invitation",
                "description": "Marks a tenant invitation as revoked.",
                "operationId": "revokeInvitation",
                "parameters": [
                    {
                        "name": "invitation",
                        "in": "path",
                        "description": "UUID of the invitation to revoke",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Invitation revoked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invitation revoked successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "This invitation cannot be revoked",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "This invitation cannot be revoked."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/tenants/invite": {
            "post": {
                "tags": [
                    "Tenant Invitations"
                ],
                "summary": "Send a tenant invitation",
                "operationId": "026d8ef9550f77990b45df41f08971f4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "role"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "role": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Invitation sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "invitation": {
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "role": {
                                                    "type": "string"
                                                },
                                                "expires_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/tenants/switch": {
            "post": {
                "tags": [
                    "Tenants"
                ],
                "summary": "Switch active tenant",
                "operationId": "b33efd36de709ca6491613d816cea0e7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "tenant_id"
                                ],
                                "properties": {
                                    "tenant_id": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Tenant switched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "active_tenant_id": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Tenant not found or inaccessible"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "TenantInvitation": {
                "title": "Tenant Invitation",
                "description": "A tenant invitation object",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "example": "a4de3245-70ed-484d-9430-90b77eb897cd"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "example@gmail.com"
                    },
                    "role": {
                        "type": "string",
                        "example": "member"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T15:17:51.000000Z"
                    },
                    "accepted_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "revoked": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            },
            "User": {
                "title": "User",
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "current_tenant_id": {
                        "type": "string",
                        "format": "uuid",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format: Bearer {token}",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Tenant Invitations",
            "description": "Tenant Invitations"
        },
        {
            "name": "Tenants",
            "description": "Tenants"
        }
    ],
    "security": [
        {
            "sanctum": []
        }
    ]
}